---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.openshift.io/connects-to: villains-db
    app.quarkus.io/commit-id: b6bdc19b4779366eaf636efc8a292cbbfdb5973a
    app.quarkus.io/build-timestamp: 2021-12-10 - 20:25:09 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8084"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
    app: rest-villains
    app.openshift.io/runtime: quarkus
  name: rest-villains
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8084
  selector:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
  type: ClusterIP
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.openshift.io/connects-to: villains-db
    app.quarkus.io/commit-id: b6bdc19b4779366eaf636efc8a292cbbfdb5973a
    app.quarkus.io/build-timestamp: 2021-12-10 - 20:25:09 +0000
  labels:
    app: rest-villains
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
  name: rest-villains
spec:
  dockerImageRepository: quay.io/quarkus-super-heroes/rest-villains
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.openshift.io/connects-to: villains-db
    app.quarkus.io/commit-id: b6bdc19b4779366eaf636efc8a292cbbfdb5973a
    app.quarkus.io/build-timestamp: 2021-12-10 - 20:25:09 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8084"
    prometheus.io/scheme: http
  labels:
    app: rest-villains
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
  name: rest-villains
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.openshift.io/connects-to: villains-db
        app.quarkus.io/commit-id: b6bdc19b4779366eaf636efc8a292cbbfdb5973a
        app.quarkus.io/build-timestamp: 2021-12-10 - 20:25:09 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8084"
        prometheus.io/scheme: http
      labels:
        app: rest-villains
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/name: rest-villains
        app.kubernetes.io/part-of: villains-service
        app.kubernetes.io/version: java11-latest
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SMALLRYE_CONFIG_LOCATIONS
              value: /mnt/app-config-map
          image: quay.io/quarkus-super-heroes/rest-villains:java11-latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: rest-villains
          ports:
            - containerPort: 8084
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /mnt/app-config-map
              name: app-config-map
              readOnly: false
      volumes:
        - configMap:
            name: rest-villains-config
            optional: false
          name: app-config-map
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.openshift.io/connects-to: villains-db
    app.quarkus.io/commit-id: b6bdc19b4779366eaf636efc8a292cbbfdb5973a
    app.quarkus.io/build-timestamp: 2021-12-10 - 20:25:09 +0000
  labels:
    app.kubernetes.io/name: rest-villains
    app.kubernetes.io/part-of: villains-service
    app.kubernetes.io/version: java11-latest
    app: rest-villains
    app.openshift.io/runtime: quarkus
  name: rest-villains
spec:
  port:
    targetPort: 8084
  to:
    kind: Service
    name: rest-villains
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rest-villains-config
  labels:
    app: rest-villains
data:
#  quarkus.hibernate-orm.database.generation: none
#  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.jdbc.url: jdbc:postgresql://villains-db:5432/villains_database
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: villains-db-config
  labels:
    app: villains-db
data:
  POSTGRESQL_DATABASE: villains_database
  POSTGRESQL_USERNAME: superbad
  POSTGRESQL_PASSWORD: superbad
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: villains-db-init
  labels:
    app: villains-db
data:
  get-data.sh: |-
    #!/bin/bash
    
    curl https://raw.githubusercontent.com/edeandrea/quarkus-super-heroes/main/rest-villains/infrastructure/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: villains-db
    app.kubernetes.io/part-of: villains-service
    app.openshift.io/runtime: postgresql
  name: villains-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: villains-db
  template:
    metadata:
      labels:
        name: villains-db
    spec:
      containers:
        - image: bitnami/postgresql:13
          name: villains-db
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: villains-db-config
          volumeMounts:
            - name: villains-db-data
              mountPath: /bitnami/postgresql
            - name: villains-db-init
              mountPath: /docker-entrypoint-preinitdb.d
      volumes:
        - name: villains-db-data
          emptyDir: {}
        - name: villains-db-init
          configMap:
            name: villains-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: villains-db
  name: villains-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: villains-db
  type: ClusterIP
