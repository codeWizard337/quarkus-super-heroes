quarkus.application.name=rest-villains

## HTTP configuration
quarkus.http.port=8084
quarkus.http.test-port=0
quarkus.jackson.serialization-inclusion=non-empty

# drop and create the database at startup (use `update` to only update the schema or 'validate' to only validate the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

# Villain service specific properties (see io.quarkus.sample.superheroes.villain.config.VillainConfig)
villain.level.multiplier=0.5
%test.villain.level.multiplier=1

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.darken=1

## CORS
quarkus.http.cors=true

# prod configuration
%prod.quarkus.datasource.username=superbad
%prod.quarkus.datasource.password=superbad
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/villains_database
%prod.quarkus.hibernate-orm.sql-load-script=import.sql
#%prod.quarkus.hibernate-orm.database.generation=validate

# OpenAPI
quarkus.smallrye-openapi.info-title=Villain API
quarkus.smallrye-openapi.info-description=This API allows CRUD operations on a villain
quarkus.smallrye-openapi.info-version=1.0
quarkus.smallrye-openapi.info-contact-name=Quarkus
quarkus.smallrye-openapi.info-contact-url=https://github.com/quarkusio
quarkus.smallrye-openapi.servers=http://localhost:${quarkus.http.port}

# Container image
quarkus.container-image.builder=docker
quarkus.container-image.registry=quay.io
quarkus.container-image.group=quarkus-super-heroes
quarkus.container-image.name=${quarkus.application.name}

# Kubernetes
quarkus.kubernetes.part-of=villains-service
quarkus.kubernetes.env.configmaps=${quarkus.application.name}-config
quarkus.kubernetes.labels.app=${quarkus.application.name}

# OpenShift
quarkus.openshift.expose=true
quarkus.openshift.part-of=${quarkus.kubernetes.part-of}
quarkus.openshift.route.expose=true
quarkus.openshift.annotations."app.openshift.io/connects-to"=villains-db
quarkus.openshift.env.configmaps=${quarkus.kubernetes.env.configmaps}
quarkus.openshift.labels.app=${quarkus.kubernetes.labels.app}
quarkus.openshift.deployment-kind=Deployment
