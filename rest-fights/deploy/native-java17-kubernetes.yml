---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/vcs-ref: main
    app.quarkus.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.quarkus.io/commit-id: 09876e7d16574ff0354cfe8660a91191c9cc24b9
    app.quarkus.io/build-timestamp: 2021-12-13 - 22:43:54 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8082"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: rest-fights
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/version: native-java17-latest
    app: rest-fights
    application: fights-service
  name: rest-fights
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8082
  selector:
    app.kubernetes.io/name: rest-fights
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/version: native-java17-latest
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/vcs-ref: main
    app.quarkus.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.quarkus.io/commit-id: 09876e7d16574ff0354cfe8660a91191c9cc24b9
    app.quarkus.io/build-timestamp: 2021-12-13 - 22:43:54 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8082"
    prometheus.io/scheme: http
  labels:
    app: rest-fights
    application: fights-service
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/version: native-java17-latest
    app.kubernetes.io/name: rest-fights
  name: rest-fights
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: fights-service
      app.kubernetes.io/version: native-java17-latest
      app.kubernetes.io/name: rest-fights
  template:
    metadata:
      annotations:
        app.quarkus.io/vcs-ref: main
        app.quarkus.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
        app.quarkus.io/commit-id: 09876e7d16574ff0354cfe8660a91191c9cc24b9
        app.quarkus.io/build-timestamp: 2021-12-13 - 22:43:54 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8082"
        prometheus.io/scheme: http
      labels:
        app: rest-fights
        application: fights-service
        app.kubernetes.io/part-of: fights-service
        app.kubernetes.io/version: native-java17-latest
        app.kubernetes.io/name: rest-fights
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: rest-fights-config
          image: quay.io/quarkus-super-heroes/rest-fights:native-java17-latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: rest-fights
          ports:
            - containerPort: 8082
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.quarkus.io/vcs-ref: main
    app.quarkus.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.quarkus.io/commit-id: 09876e7d16574ff0354cfe8660a91191c9cc24b9
    app.quarkus.io/build-timestamp: 2021-12-13 - 22:43:54 +0000
  labels:
    app.kubernetes.io/name: rest-fights
    app.kubernetes.io/part-of: fights-service
    app.kubernetes.io/version: native-java17-latest
    app: rest-fights
    application: fights-service
  name: rest-fights
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: rest-fights
                port:
                  name: http
            path: /
            pathType: Prefix
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rest-fights-config
  labels:
    app: rest-fights
    application: fights-service
data:
  quarkus.hibernate-orm.database.generation: none
  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.reactive.url: postgresql://fights-db:5432/fights_database
  quarkus.rest-client.hero-client.url: http://rest-heroes
  fight.villain.client-base-url: http://rest-villains
  kafka.bootstrap.servers: PLAINTEXT://fights-kafka:9092
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fights-db-config
  labels:
    app: fights-db
    application: fights-service
data:
  POSTGRESQL_DATABASE: ZmlnaHRzX2RhdGFiYXNl
  POSTGRESQL_USERNAME: c3VwZXJmaWdodA==
  POSTGRESQL_PASSWORD: c3VwZXJmaWdodA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fights-db-init
  labels:
    app: fights-db
    application: fights-service
data:
  get-data.sh: |-
    #!/bin/bash
    
    curl https://raw.githubusercontent.com/edeandrea/quarkus-super-heroes/main/rest-fights/infrastructure/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-db
    application: fights-service
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: postgresql
  name: fights-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-db
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-db
    spec:
      containers:
        - image: bitnami/postgresql:13
          name: fights-db
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: fights-db-config
          volumeMounts:
            - name: fights-db-data
              mountPath: /bitnami/postgresql
            - name: fights-db-init
              mountPath: /docker-entrypoint-preinitdb.d
      volumes:
        - name: fights-db-data
          emptyDir: {}
        - name: fights-db-init
          configMap:
            name: fights-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-db
    application: fights-service
  name: fights-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: fights-db
  type: ClusterIP
