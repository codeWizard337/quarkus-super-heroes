---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rest-fights-config
  labels:
    app: rest-fights
    application: fights-service
data:
  quarkus.hibernate-orm.database.generation: none
  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.reactive.url: postgresql://fights-db:5432/fights_database
  quarkus.rest-client.hero-client.url: http://rest-heroes
  fight.villain.client-base-url: http://rest-villains
  kafka.bootstrap.servers: PLAINTEXT://fights-kafka:9092
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: fights-db-config
  labels:
    app: fights-db
    application: fights-service
data:
  POSTGRESQL_DATABASE: ZmlnaHRzX2RhdGFiYXNl
  POSTGRESQL_USERNAME: c3VwZXJmaWdodA==
  POSTGRESQL_PASSWORD: c3VwZXJmaWdodA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fights-db-init
  labels:
    app: fights-db
    application: fights-service
data:
  get-data.sh: |-
    #!/bin/bash
    
    curl https://raw.githubusercontent.com/edeandrea/quarkus-super-heroes/main/rest-fights/deploy/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-db
    application: fights-service
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: postgresql
  name: fights-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-db
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-db
    spec:
      containers:
        - image: bitnami/postgresql:13
          name: fights-db
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: fights-db-config
          volumeMounts:
            - name: fights-db-data
              mountPath: /bitnami/postgresql
            - name: fights-db-init
              mountPath: /docker-entrypoint-preinitdb.d
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 32Mi
      volumes:
        - name: fights-db-data
          emptyDir: {}
        - name: fights-db-init
          configMap:
            name: fights-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-db
    application: fights-service
  name: fights-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: fights-db
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-kafka
    application: fights-service
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: kafka
  annotations:
    app.openshift.io/connects-to: fights-zookeeper
  name: fights-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-kafka
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-kafka
    spec:
      containers:
        - image: quay.io/strimzi/kafka:0.26.1-kafka-2.8.1
          name: fights-kafka
          ports:
            - containerPort: 9092
          command:
            - "sh"
            - "-c"
            - "bin/kafka-server-start.sh config/server.properties --override listeners=${KAFKA_LISTENERS} --override advertised.listeners=${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=${KAFKA_ZOOKEEPER_CONNECT}"
          env:
            - name: LOG_DIR
              value: /tmp/logs
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://fights-kafka:9092
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: fights-zookeeper:2181
          resources:
            limits:
              memory: 768Mi
            requests:
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-kafka
    application: fights-service
  name: fights-kafka
spec:
  ports:
    - port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    name: fights-kafka
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fights-zookeeper
    application: fights-service
    app.kubernetes.io/part-of: fights-service
    app.openshift.io/runtime: kafka
  name: fights-zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      name: fights-zookeeper
  template:
    metadata:
      labels:
        application: fights-service
        name: fights-zookeeper
    spec:
      containers:
        - image: quay.io/strimzi/kafka:0.26.1-kafka-2.8.1
          name: fights-zookeeper
          ports:
            - containerPort: 2181
          command:
            - "sh"
            - "-c"
            - "bin/zookeeper-server-start.sh config/zookeeper.properties"
          env:
            - name: LOG_DIR
              value: /tmp/logs
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: fights-zookeeper
    application: fights-service
  name: fights-zookeeper
spec:
  ports:
    - port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    name: fights-zookeeper
  type: NodePort
