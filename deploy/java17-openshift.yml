---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.openshift.io/connects-to: heroes-db
    app.openshift.io/vcs-ref: main
    app.quarkus.io/commit-id: df15538e0d45c18a8a03ef1940a777f5d36ac45d
    app.quarkus.io/build-timestamp: 2021-12-13 - 21:27:54 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8083"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
    app.kubernetes.io/version: java17-latest
    app: rest-heroes
    application: heroes-service
    app.openshift.io/runtime: quarkus
  name: rest-heroes
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8083
  selector:
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
    app.kubernetes.io/version: java17-latest
  type: ClusterIP
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  annotations:
    app.openshift.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.openshift.io/connects-to: heroes-db
    app.openshift.io/vcs-ref: main
    app.quarkus.io/commit-id: df15538e0d45c18a8a03ef1940a777f5d36ac45d
    app.quarkus.io/build-timestamp: 2021-12-13 - 21:27:54 +0000
  labels:
    app: rest-heroes
    application: heroes-service
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/version: java17-latest
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
  name: rest-heroes
spec:
  dockerImageRepository: quay.io/quarkus-super-heroes/rest-heroes
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.openshift.io/connects-to: heroes-db
    app.openshift.io/vcs-ref: main
    app.quarkus.io/commit-id: df15538e0d45c18a8a03ef1940a777f5d36ac45d
    app.quarkus.io/build-timestamp: 2021-12-13 - 21:27:54 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8083"
    prometheus.io/scheme: http
  labels:
    app: rest-heroes
    application: heroes-service
    app.openshift.io/runtime: quarkus
    app.kubernetes.io/version: java17-latest
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
  name: rest-heroes
spec:
  replicas: 1
  selector:
    app.kubernetes.io/version: java17-latest
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
        app.openshift.io/connects-to: heroes-db
        app.openshift.io/vcs-ref: main
        app.quarkus.io/commit-id: df15538e0d45c18a8a03ef1940a777f5d36ac45d
        app.quarkus.io/build-timestamp: 2021-12-13 - 21:27:54 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8083"
        prometheus.io/scheme: http
      labels:
        app: rest-heroes
        application: heroes-service
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/version: java17-latest
        app.kubernetes.io/name: rest-heroes
        app.kubernetes.io/part-of: heroes-service
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: rest-heroes-config
          image: quay.io/quarkus-super-heroes/rest-heroes:java17-latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: rest-heroes
          ports:
            - containerPort: 8083
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8083
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - rest-heroes
        from:
          kind: ImageStreamTag
          name: rest-heroes:java17-latest
      type: ImageChange
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    app.openshift.io/vcs-url: https://github.com/edeandrea/quarkus-super-heroes
    app.openshift.io/connects-to: heroes-db
    app.openshift.io/vcs-ref: main
    app.quarkus.io/commit-id: df15538e0d45c18a8a03ef1940a777f5d36ac45d
    app.quarkus.io/build-timestamp: 2021-12-13 - 21:27:54 +0000
  labels:
    app.kubernetes.io/name: rest-heroes
    app.kubernetes.io/part-of: heroes-service
    app.kubernetes.io/version: java17-latest
    app: rest-heroes
    application: heroes-service
    app.openshift.io/runtime: quarkus
  name: rest-heroes
spec:
  port:
    targetPort: 8083
  to:
    kind: Service
    name: rest-heroes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rest-heroes-config
  labels:
    app: rest-heroes
    application: heroes-service
data:
  quarkus.hibernate-orm.database.generation: none
  quarkus.hibernate-orm.sql-load-script: no-file
  quarkus.datasource.reactive.url: postgresql://heroes-db:5432/heroes_database
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: heroes-db-config
  labels:
    app: heroes-db
    application: heroes-service
data:
  POSTGRESQL_DATABASE: aGVyb2VzX2RhdGFiYXNl
  POSTGRESQL_USERNAME: c3VwZXJtYW4=
  POSTGRESQL_PASSWORD: c3VwZXJtYW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: heroes-db-init
  labels:
    app: heroes-db
    application: heroes-service
data:
  get-data.sh: |-
    #!/bin/bash
    
    curl https://raw.githubusercontent.com/edeandrea/quarkus-super-heroes/main/rest-heroes/infrastructure/db-init/initialize-tables.sql --output /docker-entrypoint-initdb.d/1-init-tables.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: heroes-db
    application: heroes-service
    app.kubernetes.io/part-of: heroes-service
    app.openshift.io/runtime: postgresql
  name: heroes-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: heroes-db
  template:
    metadata:
      labels:
        name: heroes-db
        application: heroes-service
    spec:
      containers:
        - image: bitnami/postgresql:13
          name: heroes-db
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: heroes-db-config
          volumeMounts:
            - name: heroes-db-data
              mountPath: /bitnami/postgresql
            - name: heroes-db-init
              mountPath: /docker-entrypoint-preinitdb.d
      volumes:
        - name: heroes-db-data
          emptyDir: {}
        - name: heroes-db-init
          configMap:
            name: heroes-db-init
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: heroes-db
    application: heroes-service
  name: heroes-db
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: heroes-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ui-super-heroes
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/part-of: super-heroes
  annotations:
    app.openshift.io/connects-to: rest-fights
  name: ui-super-heroes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-super-heroes
      deployment: ui-super-heroes
  template:
    metadata:
      labels:
        app: ui-super-heroes
        deployment: ui-super-heroes
    spec:
      containers:
        - image: quay.io/quarkus-super-heroes/ui-super-heroes:latest
          name: ui-super-heroes
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: ui-super-heroes
  name: ui-super-heroes
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
  selector:
    app: ui-super-heroes
    deployment: ui-super-heroes
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ui-super-heroes
  labels:
    app: ui-super-heroes
spec:
  to:
    kind: Service
    name: ui-super-heroes
  port:
    targetPort: 8080
